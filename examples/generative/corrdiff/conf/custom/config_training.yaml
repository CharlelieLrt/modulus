# SPDX-FileCopyrightText: Copyright (c) 2023 - 2024 NVIDIA CORPORATION & AFFILIATES.
# SPDX-FileCopyrightText: All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

hydra:
    job:
          chdir: true
          name: my_job_name # Change `my_job_name`
    run:
          dir: ./my_output_dir/${hydra:job.name} # Change `my_output_dir`
    searchpath:
          - pkg://conf/custom/base # Do not modify

# Base parameters for dataset, model, training, and validation
defaults:

    # TODO: enable another dataset type for webdataset or .npy
    - dataset: netCFD_mini
    # The base dataset format for custom training.
    # Accepted values:
    #     `netCFD_mini`: netCFD format, with reduced capabilities for fast experiments.

    - model: diffusion
    # The base model parameters. Note: does not support lead-time aware models.
    # Accepted values:
    #     `regression`: a regression UNet for deterministic predictions
    #     `diffusion`: a diffusion UNet for residual predictions
    #     `patched_diffusion`: a more memory-efficient diffusion model

    - training: ${model}
    # The base training parameters. Self-resolved, do not modify.


# Dataset parameters to specialize
dataset:
    data_path: /my/data/file.nc
    # Path to .nc data file
    stats_path: /my/stats/file.json
    # Path to json stats file
    input_variables: []
    # List[str], names of input channels
    output_variables: []
    # List[str], names of output channels
    invariant_variables: null
    # List[str], names of invariant channels. Optional


# Training parameters to specialize
training:
    hp:
        total_batch_size: 256
        # Total batch size
        batch_size_per_gpu: "auto"
        # The batch size per GPU. If nb_GPUS * batch_size_per_gpu <
        # total_batch_size, gradient accumulation will be used to train with an
        # effective batch size of `total_batch_size`. Default to "auto".
        patch_shape_x: 448
        patch_shape_y: 448
        # Patch size only used for `model: patched_diffusion`.
        # 448 is recommended value for hrrr dataset. For custom
        # dataset, this should be determined based on an autocorrelation plot.
    io:
        regression_checkpoint_path: checkpoints/my_checkpoint.mdlus
        # Path to load the regression checkpoint
        print_progress_freq: 10000
        # How often to print progress, measured in number of processed samples
        save_checkpoint_freq: 5000
        # How often to save the checkpoints, measured in number of processed samples
        save_n_recent_checkpoints: -1
        # Set to a positive integer to only keep the most recent n checkpoints
        validation_freq: 5000
        # how often to record the validation loss, measured in number of processed samples
        validation_steps: 10
        # how many loss evaluations are used to compute the validation loss per checkpoint 